I"=°<p>Ahora que sabes para que sirve Express, nosotros te vamos a mostrar como preparar y testear un entorno de desarrollo Node/Express en: Windows, Linux (Ubuntu), y macOS. Este art√≠culo te va a dar todo lo que se necesita para poder empezar a desarrollar apps en Express, sin importar el sistema operativo que se use.</p>

<table>
  <tbody>
    <tr>
      <th scope="row">Prerequisitos:</th>
      <td>
        Saber como abrir una terminal / l√≠nea de comando. Saber como instalar
        paquetes de software en su sistema operativo de su computadora de
        desarrollo.
      </td>
    </tr>
    <tr>
      <th scope="row">Objectivo:</th>
      <td>
        Configurar un ambiente de desarrollo para Express (X.XX) en su
        computadora.
      </td>
    </tr>
  </tbody>
</table>

<h2 id="notas-acerca-del-entorno-de-desarrollo">Notas acerca del entorno de desarrollo</h2>

<p><em>Node</em> y <em>Express</em> hacen muy f√°cil configurar su computadora con el prop√≥sito de iniciar el desarrollo de aplicaciones web. Esta secci√≥n provee una rese√±a de qu√© herramientas son necesarias, explica algunos de los m√©todos m√°s simples para instalar Node (y Express) en Ubuntu, macOS y Windows, y muestra como puede probar su instalaci√≥n.</p>

<h3 id="qu√©-es-el-ambiente-de-desarrollo-express">Qu√© es el ambiente de desarrollo Express?</h3>

<p>El ambiente de desarrollo <em>Express</em> incluye una instalaci√≥n de <em>Nodejs</em>, el <em>NPM administrador de paquetes</em>, y (opcionalmente) el Generador de Aplicaciones de <em>Express</em> en su computadora local.</p>

<p><em>Node</em> y el administrador de paquetes <em>NPM</em> se instalan juntos desde paquetes binarios, instaladores, administradores de paquetes del sistema operativo o desde los fuentes (como se muestra en las siguientes secci√≥nes). <em>Express</em> es entonces instalado por NPM como una dependencia individual de sus aplicaciones web <em>Express</em> (conjuntamente con otras librer√≠as como motores de plantillas, controladores de bases de datos, middleware de autenticaci√≥n, middleware para servir archivos est√°ticos, etc.)</p>

<p><em>NPM</em> puede ser usado tambi√©n para (globalmente) instalar el Generador de Aplicaciones de <em>Express</em>, una herramienta manual para crear la estructura de las web apps de <em>Express</em> que siguen el <a href="/es/Apps/Fundamentals/Modern_web_app_architecture/MVC_architecture">patr√≥n MVC</a>. El generador de aplicaciones es opcional porque no necesita utilizar esta herramienta para crear apps que usan Express, o construir apps Express que tienen el mismo dise√±o arquitect√≥nico o dependencias. No obstante estaremos usandolo, porque hace mucho m√°s f√°cil, y promueve una estrucura modular de aplicaci√≥n.</p>

<blockquote>
  <p><strong>Nota:</strong> A diferencia de otros frameworks web , el ambiente de desarrollo no incluye un servidor web independiente. Una aplicaci√≥n web <em>Node</em>/<em>Express</em> crea y ejecuta su propio servidor web!</p>
</blockquote>

<p>Hay otras herramientas perif√©ricas que son parte de un ambiente de desarrollo t√≠pico, incluyendo <a href="/es/docs/Learn/Common_questions/Available_text_editors">editores de texto</a> o IDEs para edici√≥n de c√≥digo, y herramientas de administraci√≥n de control de fuentes como <a href="https://git-scm.com/">Git</a> para administrar con seguridad diferentes versiones de su codigo. Asumimos que usted ya tiene instaladas esta clase de herramientas (en particular un editor de texto).</p>

<h3 id="qu√©-sistemas-operativos-son-soportados">Qu√© sistemas operativos son soportados?</h3>

<p><em>Node</em> puede ser ejecutado en Windows, macOS, varias ‚Äúversiones‚Äù de Linux, Docker, etc. (hay una lista completa de paginas de <a href="https://nodejs.org/en/download/">Downloads</a> de nodejs). Casi cualquier computadora personal podr√≠a tener el desempe√±o necesario para ejecutar Node durante el desarrollo. <em>Express</em> es ejecutado en un ambiente <em>Node</em>, y por lo tanto puede ejecutarse en cualquier plataforma que ejecute <em>Node</em>.</p>

<p>En este articulo proveemos instruciones para configurarlo para Windows, macOS, and Ubuntu Linux.</p>

<h3 id="qu√©-versi√≥n-de-nodeexpress-puedo-usar">¬øQu√© versi√≥n de Node/Express puedo usar?</h3>

<p>Hay varias <a href="https://nodejs.org/en/blog/release/">versiones de Node</a> ‚Äî recientes que contienen reparacion de bugs, soporte para versiones mas recientes de ECMAScript (JavaScript) estandares, y mejoras a las APIs de Node .</p>

<p>Generalmente se debe usar la versi√≥n m√°s reciente <em>SLP (soporte de largo-plazo),</em> una versi√≥n como esta es m√°s estable que la versi√≥n ‚Äúactual‚Äù, mientras que sigue teniendo caracter√≠sticas relativamente recientes (y continua siendo activamente actualizado). Deber√≠a utilizar la versi√≥n <em>Actual</em> si necesita una caracter√≠stica que no esta presente en la versi√≥n SLP.</p>

<p>Para <em>Express</em> siempre se debe utilizar la versi√≥n m√°s reciente.</p>

<h3 id="qu√©-pasa-con-bases-de-datos-y-otras-dependencias">¬øQu√© pasa con bases de datos y otras dependencias?</h3>

<p>Otras dependencias, tales como los controladores de bases de datos, motores de plantillas, motores de autenticaci√≥n, etc. son parte de la aplicaci√≥n, y son importadas dentro del ambiente de la aplicaci√≥n utilizando el administrador de paquetes NPM. Estos los discutiremos en art√≠culos posteriores app-specific.</p>

<h2 id="instalar-node">Instalar Node</h2>

<p>Para poder utilizar <em>Express</em> primero tiene que instalar <em>Nodejs</em> y el <a href="https://docs.npmjs.com/">Administrador de Paquetes de Node (NPM)</a> en su sistema operativo. Las siguientes secciones explican la forma m√°s f√°cil de instalar la versi√≥n Soporte de Largo-Plazo (SLP) de Nodejs en Ubuntu Linux 16.04, macOS, y Windows 10.</p>

<blockquote>
  <p><strong>Nota:</strong> Las secciones de abajo muestran la forma m√°s facil de instalar <em>Node</em> y <em>NPM</em> en nuestras plataformas de sistemas operativo a elegir. Si esta utilizando otro SO o solo quiere ver alguna de otros enfoques para las plataformas actuales entonce vea <a href="https://nodejs.org/en/download/package-manager/">Instalando Node.js via administrador de paquetes</a> (nodejs.org).</p>
</blockquote>

<h3 id="macos-y-windows">macOS y Windows</h3>

<p>Instalar <em>Node</em> y <em>NPM</em> en Windows y macOS es sencillo, porque simplemente debe utilizar el instalador provisto:</p>

<ol>
  <li>
    <p>Descargue el instalador requerido:</p>

    <ol>
      <li>Vaya a <a href="https://nodejs.org/en/">https://nodejs.org/es/</a></li>
      <li>Seleccione el boton para descargar la versi√≥n LTS que es ‚ÄúRecomendada la mayor√≠a de los usuarios‚Äù.</li>
    </ol>
  </li>
  <li>
    <p>Instale Node al dar doble-click en el archivo de descarga y en seguida la instalaci√≥n inicia.</p>
  </li>
</ol>

<h3 id="ubuntu-1804">Ubuntu 18.04</h3>

<p>La forma m√°s f√°cil de instalar la versi√≥n LTS de Node 10.x es la usar el <a href="https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions">administrador de paquetes</a> para obtenerlo del repositorio de distribuciones <em>binarias</em> de Ubuntu. Esto puede ser hecho muy simple al ejecutar los siguientes dos comandos en su terminal:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>curl <span class="nt">-sL</span> https://deb.nodesource.com/setup_10.x | <span class="nb">sudo</span> <span class="nt">-E</span> bash -
<span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="nt">-y</span> nodejs
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p><strong>Advertencia:</strong> No instale directamente desde los repositorios normales de Ubuntu porque pueden contener versions muy antiguas de Node.</p>
</blockquote>

<h3 id="probar-su-instalaci√≥n-de-nodejs-y-npm">Probar su instalaci√≥n de Nodejs y NPM</h3>

<p>La forma m√°s f√°cil de probar que Node est√° instalado es ejecutar el comando ‚Äúversion‚Äù en su prompt de terminal/command y checar que una cadena de versi√≥n es devuelta:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="o">&gt;</span>node <span class="nt">-v</span>
v10.16.0
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The administrador de paquetes <em>NPM</em> de <em>Nodejs</em> tambi√©n deber√≠a haber sido instalado y puede ser probado de la misma forma:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="o">&gt;</span>npm <span class="nt">-v</span>
6.9.0
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Como una prueba un poco m√°s emocionante creemos un muy b√°sico ‚Äúb√°sico servidor node‚Äù que simplemente imprima ‚ÄúHola Mundo‚Äù en el browser cuando visite la URL correcta en √©l:</p>

<ol>
  <li>
    <p>Copie el siguiente texto en un archivo llamado <strong>holanode.js</strong>. Este utiliza caracter√≠sticas b√°sicas de Node (nada desde Express) y algo de sint√°xis ES6:</p>

    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre> <span class="c1">//Load HTTP module</span>
 <span class="kd">const</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">http</span><span class="dl">"</span><span class="p">);</span>
 <span class="kd">const</span> <span class="nx">hostname</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">127.0.0.1</span><span class="dl">'</span><span class="p">;</span>
 <span class="kd">const</span> <span class="nx">port</span> <span class="o">=</span> <span class="mi">3000</span><span class="p">;</span>

 <span class="c1">//Create HTTP server and listen on port 3000 for requests</span>
 <span class="kd">const</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">((</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>

   <span class="c1">//Set the response HTTP header with HTTP status and Content type</span>
   <span class="nx">res</span><span class="p">.</span><span class="nx">statusCode</span> <span class="o">=</span> <span class="mi">200</span><span class="p">;</span>
   <span class="nx">res</span><span class="p">.</span><span class="nx">setHeader</span><span class="p">(</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">text/plain</span><span class="dl">'</span><span class="p">);</span>
   <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello World</span><span class="se">\n</span><span class="dl">'</span><span class="p">);</span>
 <span class="p">});</span>

 <span class="c1">//listen for request on port 3000, and as a callback function have the port listened on logged</span>
 <span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">port</span><span class="p">,</span> <span class="nx">hostname</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
   <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Server running at http://</span><span class="p">${</span><span class="nx">hostname</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">port</span><span class="p">}</span><span class="s2">/`</span><span class="p">);</span>
 <span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>El c√≥digo importa el m√≥dulo ‚Äúhttp‚Äù y lo usa para crear un servidor (<code class="language-plaintext highlighter-rouge">createServer()</code>) que escucha las solicitudes HTTP en el puerto 3000. Luego, el script imprime un mensaje en la consola con la URL del navegador puede usar para probar el servidor. La funci√≥n <code class="language-plaintext highlighter-rouge">createServer()</code> toma como argumento una funci√≥n callback que se invocar√° cuando se reciba una solicitud HTTP ‚Äî esto simplemente devuelve una respuesta con un c√≥digo de estado HTTP de 200 (‚ÄúOK‚Äù) y el texto sin formato ‚ÄúHello World‚Äù.</p>

    <blockquote>
      <p><strong>Nota:</strong> ¬°No se preocupe si a√∫n no comprende exactamente lo que est√° haciendo este c√≥digo! ¬°Explicaremos nuestro c√≥digo con mayor detalle una vez que comencemos a usar Express!</p>
    </blockquote>
  </li>
  <li>
    <p>Inicie el servidor navegando en el mismo directorio que su archivo <code class="language-plaintext highlighter-rouge">hellonode.js</code> en su s√≠mbolo del sistema, y llamando a <code class="language-plaintext highlighter-rouge">node</code> junto con el nombre del script, as√≠:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre> <span class="o">&gt;</span>node hellonode.js
 Server running at http://127.0.0.1:3000/
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>Navega a la URL <code class="language-plaintext highlighter-rouge">http://127.0.0.1:3000</code>. S√≠ todo esta funciona, el navegador simplemente debe mostrar la cadena de texto ‚ÄúHello World‚Äù.</p>
  </li>
</ol>

<h2 id="usando-npm">Usando NPM</h2>

<p>Junto al propio node, <a href="https://docs.npmjs.com/">NPM</a> es la herramienta m√°s importante para trabajar con aplicaciones de node. NPM se usa para obtener los paquetes (bibliotecas de JavaScript) que una aplicaci√≥n necesita para el desarrollo, las pruebas y/o la producci√≥n, y tambi√©n se puede usar para ejecutar pruebas y herramientas utilizadas en el proceso de desarrollo.</p>

<blockquote>
  <p><strong>Nota:</strong> Desde la perspectiva de Node, Express es solo otro paquete que necesita instalar usando NPM y luego requerir en su propio c√≥digo.</p>
</blockquote>

<p>Se puede usar NPM manualmente para buscar por separado cada paquete necesario. Por lo general, administramos las dependencias utilizando un archivo de definici√≥n de texto plano llamado <a href="https://docs.npmjs.com/files/package.json">package.json</a>. Este archivo enumera todas las dependencias para un ‚Äúpaquete‚Äù de JavaScript espec√≠fico, incluido el nombre del paquete, la versi√≥n, la descripci√≥n, el archivo inicial a ejecutar, las dependencias de producci√≥n, las dependencias de desarrollo, las versiones de Node con las que puede trabajar, etc. El archivo package.json deber√≠a contener todo lo que NPM necesita para buscar y ejecutar su aplicaci√≥n (si estuviera escribiendo una biblioteca reutilizable, podr√≠a usar esta definici√≥n para cargar su paquete en el repositorio npm y ponerlo a disposici√≥n de otros usuarios).</p>

<h3 id="agregando-dependencias">Agregando dependencias</h3>

<p>Los siguientes pasos muestran c√≥mo puede usar NPM para descargar un paquete, guardarlo en las dependencias del proyecto y luego requerirlo en una aplicaci√≥n Node.</p>

<blockquote>
  <p><strong>Nota:</strong> Aqu√≠ mostramos las instrucciones para buscar e instalar el paquete <em>Express</em>. M√°s adelante mostraremos c√≥mo este paquete y otros ya est√°n especificados para nosotros utilizando el <em>Generador de aplicaciones Express</em>. Esta secci√≥n se proporciona porque es √∫til para comprender c√≥mo funciona NPM y qu√© est√° creando el generador de aplicaciones.</p>
</blockquote>

<ol>
  <li>
    <p>Primero cree un directorio para su nueva aplicaci√≥n y acceda a √©l:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre> <span class="nb">mkdir </span>myapp
 <span class="nb">cd </span>myapp
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>Use el comando <code class="language-plaintext highlighter-rouge">npm init</code> para crear un archivo <strong>package.json</strong> para su aplicaci√≥n. Este comando le solicita varias cosas, incluido el nombre y la versi√≥n de su aplicaci√≥n y el nombre del archivo de punto de entrada inicial (de forma predeterminada, esto es <strong>index.js</strong>). Por ahora, solo acepte los valores predeterminados:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre> npm init
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>Si muestra el archivo <strong>package.json</strong> (<code class="language-plaintext highlighter-rouge">cat package.json</code>), ver√° los valores predeterminados que acept√≥, que finalizar√°n con la licencia.</p>

    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="w"> </span><span class="p">{</span><span class="w">
   </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"myapp"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1.0.0"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
   </span><span class="nl">"main"</span><span class="p">:</span><span class="w"> </span><span class="s2">"index.js"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"test"</span><span class="p">:</span><span class="w"> </span><span class="s2">"echo </span><span class="se">\"</span><span class="s2">Error: no test specified</span><span class="se">\"</span><span class="s2"> &amp;&amp; exit 1"</span><span class="w">
   </span><span class="p">},</span><span class="w">
   </span><span class="nl">"author"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
   </span><span class="nl">"license"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ISC"</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>Ahora instale Express en el directorio <code class="language-plaintext highlighter-rouge">myapp</code> y gu√°rdelo en la lista de dependencias de su archivo package.json</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre> npm <span class="nb">install </span>express <span class="nt">--save</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>La secci√≥n de dependencias de su <strong>package.json</strong> ahora aparecer√° al final del archivo <strong>package.json</strong> e incluir√° <em>Express</em>.</p>

    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="w"> </span><span class="p">{</span><span class="w">
   </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"myapp"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1.0.0"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
   </span><span class="nl">"main"</span><span class="p">:</span><span class="w"> </span><span class="s2">"index.js"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"test"</span><span class="p">:</span><span class="w"> </span><span class="s2">"echo </span><span class="se">\"</span><span class="s2">Error: no test specified</span><span class="se">\"</span><span class="s2"> &amp;&amp; exit 1"</span><span class="w">
   </span><span class="p">},</span><span class="w">
   </span><span class="nl">"author"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
   </span><span class="nl">"license"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ISC"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"express"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.16.3"</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>Para usar la biblioteca, llame a la funci√≥n <code class="language-plaintext highlighter-rouge">require ()</code> como se muestra a continuaci√≥n en su archivo <strong>index.js</strong>.
 Cree un archivo llamado <strong>index.js</strong> en la ra√≠z del directorio de la aplicaci√≥n ‚Äúmyapp‚Äù y dele el contenido que se muestra arriba.</p>

    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre> <span class="kd">const</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">express</span><span class="dl">'</span><span class="p">)</span>
 <span class="kd">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>

 <span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">/</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
   <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello World!</span><span class="dl">'</span><span class="p">)</span>
 <span class="p">});</span>

 <span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8000</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
   <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Example app listening on port 8000!</span><span class="dl">'</span><span class="p">)</span>
 <span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>Este c√≥digo muestra una aplicaci√≥n web m√≠nima ‚ÄúHelloWorld‚Äù Express. Esto importa el m√≥dulo ‚Äúexpress‚Äù y lo usa para crear un servidor (<code class="language-plaintext highlighter-rouge">app</code>) que escucha las solicitudes HTTP en el puerto 8000 e imprime un mensaje en la consola que indica qu√© URL del navegador puede usar para probar el servidor. La funci√≥n <code class="language-plaintext highlighter-rouge">app.get ()</code> solo responde a las solicitudes HTTP <code class="language-plaintext highlighter-rouge">GET</code> con la ruta URL especificada (<code class="language-plaintext highlighter-rouge">'/'</code>), en este caso llamando a una funci√≥n para enviar nuestro mensaje Hello World! .</p>
  </li>
  <li>
    <p>Puede iniciar el servidor llamando a node con el script en su s√≠mbolo del sistema:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre> <span class="o">&gt;</span>node index.js
 Example app listening on port 8000
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>Navega a la URL (<code class="language-plaintext highlighter-rouge">http://127.0.0.1:8000/</code>). S√≠ todo esta funciona, el navegador simplemente debe mostrar la cadena de texto ‚ÄúHello World‚Äù.</p>
  </li>
</ol>

<h3 id="dependencias-de-desarrollo">Dependencias de Desarrollo</h3>

<p>Si una dependencia solo se usa durante el desarrollo, debe guardarla como una ‚Äúdependencia de desarrollo‚Äù (para que los usuarios de su paquete no tengan que instalarla en producci√≥n). Por ejemplo, para usar la popular herramienta Linting JavaScript <a href="http://eslint.org/">eslint</a> llamar√≠a a NPM como se muestra a continuaci√≥n:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>npm <span class="nb">install </span>eslint <span class="nt">--save-dev</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>La siguiente entrada se agregar√≠a al <strong>paquete.json</strong> de su aplicaci√≥n:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>  <span class="dl">"</span><span class="s2">devDependencies</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">eslint</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">^4.12.1</span><span class="dl">"</span>
  <span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p><strong>Nota:</strong> ‚Äú<a href="https://en.wikipedia.org/wiki/Lint_(software)">Linters</a>‚Äù son herramientas que realizan an√°lisis est√°ticos en el software para reconocer e informar la adhesi√≥n / no adhesi√≥n a alg√∫n conjunto de mejores pr√°cticas de codificaci√≥n.</p>
</blockquote>

<h3 id="ejecutando-tareas">Ejecutando tareas</h3>

<p>Adem√°s de definir y buscar dependencias, tambi√©n puede definir scripts con nombre en sus archivos package.json y llamar a NPM para ejecutarlos con el comando <a href="https://docs.npmjs.com/cli/run-script">run-script</a>. Este enfoque se usa com√∫nmente para automatizar las pruebas en ejecuci√≥n y partes de la cadena de herramientas de desarrollo o construcci√≥n (por ejemplo, ejecutar herramientas para minimizar JavaScript, reducir im√°genes, LINT/analizar su c√≥digo, etc.).</p>

<blockquote>
  <p><strong>Nota:</strong> Los ejecutadores de tareas como <a href="http://gulpjs.com/">Gulp</a> y <a href="http://gruntjs.com/">Grunt</a> tambi√©n se pueden usar para ejecutar pruebas y otras herramientas externas.</p>
</blockquote>

<p>Por ejemplo, para definir un script para ejecutar la dependencia de desarrollo de <em>eslint</em> que especificamos en la secci√≥n anterior, podr√≠amos agregar el siguiente bloque de script a nuestro archivo <strong>package.json</strong> (suponiendo que el origen de nuestra aplicaci√≥n est√© en una carpeta /src/js):</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="dl">"</span><span class="s2">scripts</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
  <span class="p">...</span>
  <span class="dl">"</span><span class="s2">lint</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">eslint src/js</span><span class="dl">"</span>
  <span class="p">...</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Para explicar un poco m√°s, <code class="language-plaintext highlighter-rouge">eslint src/js</code> es un comando que podr√≠amos ingresar en nuestra l√≠nea de terminal/linea de comandos para ejecutar <code class="language-plaintext highlighter-rouge">eslint</code> en archivos JavaScript contenidos en el directorio <code class="language-plaintext highlighter-rouge">src/js</code> dentro de nuestro directorio de aplicaciones. Incluir lo anterior dentro del archivo package.json de nuestra aplicaci√≥n proporciona un acceso directo para este comando: <code class="language-plaintext highlighter-rouge">lint</code>.</p>

<p>Entonces podr√≠amos ejecutar eslint usando NPM llamando a:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>npm run-script lint
<span class="c"># OR (using the alias)</span>
npm run lint
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Es posible que este ejemplo no parezca m√°s corto que el comando original, pero puede incluir comandos mucho m√°s grandes dentro de sus scripts npm, incluidas cadenas de comandos m√∫ltiples. Puede identificar un solo script npm que ejecute todas sus pruebas a la vez.</p>

<h2 id="instalando-express-application-generator">Instalando Express Application Generator</h2>

<p>La herramienta <a href="https://expressjs.com/en/starter/generator.html">Express Application Generator</a> genera un ‚Äúesqueleto‚Äù de la aplicaci√≥n Express. Instale el generador usando NPM como se muestra (el indicador <code class="language-plaintext highlighter-rouge">-g</code> instala la herramienta globalmente para que pueda llamarla desde cualquier lugar):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>npm install express-generator -g
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Para crear una aplicaci√≥n <em>Express</em> llamada ‚Äúhelloworld‚Äù con la configuraci√≥n predeterminada, navegue hasta donde desea crearla y ejecute la aplicaci√≥n como se muestra:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>express helloworld
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p><strong>Nota:</strong> Tambi√©n puede especificar la biblioteca de plantillas para usar y una serie de otras configuraciones. Use el comando <code class="language-plaintext highlighter-rouge">--help</code> para ver todas las opciones:</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>express --help
</pre></td></tr></tbody></table></code></pre></div>  </div>
</blockquote>

<p>NPM crear√° la nueva aplicaci√≥n Express en una subcarpeta de su ubicaci√≥n actual, mostrando el progreso de la compilaci√≥n en la consola. Al finalizar, la herramienta mostrar√° los comandos que necesita ingresar para instalar las dependencias de Node e iniciar la aplicaci√≥n.</p>

<blockquote>
  <p><strong>Nota:</strong> La nueva aplicaci√≥n tendr√° un archivo <strong>package.json</strong> en su directorio ra√≠z. Puede abrir esto para ver qu√© dependencias est√°n instaladas, incluidas Express y la biblioteca de plantillas Jade:</p>

  <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="p">{</span><span class="w">
  </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"helloworld"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.0.0"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"private"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node ./bin/www"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"body-parser"</span><span class="p">:</span><span class="w"> </span><span class="s2">"~1.18.2"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"cookie-parser"</span><span class="p">:</span><span class="w"> </span><span class="s2">"~1.4.3"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"debug"</span><span class="p">:</span><span class="w"> </span><span class="s2">"~2.6.9"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"express"</span><span class="p">:</span><span class="w"> </span><span class="s2">"~4.15.5"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"jade"</span><span class="p">:</span><span class="w"> </span><span class="s2">"~1.11.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"morgan"</span><span class="p">:</span><span class="w"> </span><span class="s2">"~1.9.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"serve-favicon"</span><span class="p">:</span><span class="w"> </span><span class="s2">"~2.4.5"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>  </div>
</blockquote>

<p>Instale todas las dependencias para la aplicaci√≥n helloworld usando NPM como se muestra:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nb">cd </span>helloworld
npm <span class="nb">install</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Luego ejecute la aplicaci√≥n (los comandos son ligeramente diferentes para Windows y Linux/macOS), como se muestra a continuaci√≥n:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="c">#  Ejecute helloworld en Windows con s√≠mbolo del sistema</span>
SET <span class="nv">DEBUG</span><span class="o">=</span>helloworld:<span class="k">*</span> &amp; npm start

<span class="c">#  Ejecute helloworld en Windows con PowerShell</span>
SET <span class="nv">DEBUG</span><span class="o">=</span>helloworld:<span class="k">*</span> | npm start

<span class="c">#  Ejecute helloworld en Linux/macOS</span>
<span class="nv">DEBUG</span><span class="o">=</span>helloworld:<span class="k">*</span> npm start
</pre></td></tr></tbody></table></code></pre></div></div>

<p>El comando DEBUG crea registros √∫tiles, lo que resulta en una salida como la que se muestra a continuaci√≥n.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="o">&gt;</span>SET <span class="nv">DEBUG</span><span class="o">=</span>helloworld:<span class="k">*</span> &amp; npm start

<span class="o">&gt;</span> helloworld@0.0.0 start D:<span class="se">\G</span>ithub<span class="se">\e</span>xpresstests<span class="se">\h</span>elloworld
<span class="o">&gt;</span> node ./bin/www

  helloworld:server Listening on port 3000 +0ms
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Abra un navegador y navegue a <code class="language-plaintext highlighter-rouge">http://127.0.0.1:3000/</code> para ver la p√°gina de bienvenida Express predeterminada.</p>

<p><img src="express_default_screen.png" alt="Express - Generated App Default Screen" /></p>

<p>Hablaremos m√°s sobre la aplicaci√≥n generada cuando lleguemos al art√≠culo sobre la generaci√≥n de una aplicaci√≥n esqueleto.</p>

<h2 id="resumen">Resumen</h2>

<p>Ahora tiene un entorno de desarrollo de Node en funcionamiento en su computadora que puede usarse para crear aplicaciones web Express. Tambi√©n ha visto c√≥mo se puede usar NPM para importar Express en una aplicaci√≥n, y tambi√©n c√≥mo puede crear aplicaciones usando la herramienta Express Application Generator y luego ejecutarlas.</p>

<p>En el siguiente art√≠culo, comenzaremos a trabajar a trav√©s de un tutorial para crear una aplicaci√≥n web completa utilizando este entorno y las herramientas asociadas.</p>

<h2 id="ver-tambi√©n">Ver tambi√©n</h2>

<ul>
  <li><a href="https://nodejs.org/en/download/">Downloads</a> page (nodejs.org)</li>
  <li><a href="https://nodejs.org/en/download/package-manager/">Installing Node.js via package manager</a> (nodejs.org)</li>
  <li><a href="http://expressjs.com/en/starter/installing.html">Installing Express</a> (expressjs.com)</li>
  <li><a href="https://expressjs.com/en/starter/generator.html">Express Application Generator</a> (expressjs.com)</li>
</ul>

<h2 id="in-this-module">In this module</h2>

<ul>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/Introduction">Express/Node introduction</a></li>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/development_environment">Setting up a Node (Express) development environment</a></li>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website">Express Tutorial: The Local Library website</a></li>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/skeleton_website">Express Tutorial Part 2: Creating a skeleton website</a></li>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/mongoose">Express Tutorial Part 3: Using a Database (with Mongoose)</a></li>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/routes">Express Tutorial Part 4: Routes and controllers</a></li>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/Displaying_data">Express Tutorial Part 5: Displaying library data</a></li>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/forms">Express Tutorial Part 6: Working with forms</a></li>
  <li><a href="/es/docs/Learn/Server-side/Express_Nodejs/deployment">Express Tutorial Part 7: Deploying to production</a></li>
</ul>

:ET